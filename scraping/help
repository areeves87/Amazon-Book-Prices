Sometimes, scraping an amazon book category's bestsellers data is just a matter of navigating to that page and parsing its html to locate all the book titles and prices. This is the case for the first page of bestseller data per category, which includes the top 20 bestselling books in that category. Simply feed the page's URL to your scraping tool, extract the html, and parse to locate the links of interest-- in our case, the links to each category's top100 bestsellers.

Following a given category's link takes you to the first of five pages in a bestseller list. If you watch the URL as you navigate to the next page, you'll see that it remains essentially the same except now the URL ends in a "...#2". The third page has the same base URL except it ends in "...#3". This suggests an obvious rule for how to build the URLs for scraping: simply run the base URL through a for-loop and increment the page number to retrieve all the pages for a given book category.

However, when you try this method, it doesn't work! Each iteration of the for-loop retrieves only the information for the first page. So, while sometimes parsing a page's html is enough, other times a different scraping method is required. 
https://ianlondon.github.io/blog/web-scraping-discovering-hidden-apis/
